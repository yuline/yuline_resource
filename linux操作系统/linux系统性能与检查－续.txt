20150811
vmstat提供以下信息：

procs部分提供了在生成报告时正在运行的进程数目(r)以及被阻塞的进程数目(b)。

r 指的是CPU运行队列中的进程数，即runnable process的数量，这些进程还没有占用CPU
而load指的是runnable+running process的数量。

｛注意这个数据不同于uptime，uptime是1、5、15分钟的平均值，而vmstat基本上可以认为是瞬时值｝可以利用这些信息来检查运行中以及阻塞进程的数目是否与预期值相符。如果与预期不符的话，可以检查：应用和内核的参数、系统调度器和I/O调度器、进程在可用处理器之间的分布等。

memory部分提供了换出内存(swpd)、空闲内存(free)、I/O数据结构的缓冲区缓存(buff)，以及从磁盘读取文件的内存缓存(cache)的容量，单位为KB。swpd的取值反映了kswapd的活动情况。

swap部分提供了从磁盘上换入的内存容量(si)以及换出到磁盘上的内存量(so)，单位为KB/s。so反映了当数据被换出至交换区时kswapd的活动情况，而si则反映了当页面被换回到物理内存时发生页面错误的情况。？？？

io部分提供了从设备读入的块数(bi)以及写出到设备上的块数(bo)，单位为KB/s。当运行I/O密集的应用时，应特别注意这两个部分的值。

system部分提供了每秒的中断数目(in)和上下文切换数目(cs)。

cpu部分提供了用户(us)、系统(sy)、真正空闲(id)以及等待I/O完成(wa)在CPU总时间中所占的百分比。CPU利用率也许是最常用的量度。若wa值过大，则应该检查I/O子系统，例如，可以断定需要更多的I/O控制器和磁盘以便减少I/O等待时间。

对于I/O活动密集的工作负荷，可以通过监视bi和bo来获取传输速率，监视in来获取中断速率。｛观察是否i/o太繁忙了，需要更快的磁盘；或者是网络数据包太多了in中断，尤其是软中断｝
通过监视swpd、si和so可以查看系统是否正在进行交换活动。如果发生交换，则可以检查交换速率。最常见的量度或许是CPU利用率以及对us、sy、id和wa的监视。若wa取值很大，就需要检查I/O子系统。可能会得出结论：需要添加更多的I/O控制器和磁盘以减少I/O等待时间。 ｛这种情况应该是bi bo 等都在合理范围内。｝
与uptime类似，如果在没有选项的情况下运行vmstat工具，会提供系统的单个快照。如果运行uptime之后再执行vmstat，则可以获得关于系统繁忙程度的快照以及关于处理器针对用户、系统、空闲以及等待I/O的时间百分比。另外，vmstat还对可运行进程的数目加以即时计数。注意uptime提供了可运行进程数目在3个时间范围(1min、5min和15min)内的另一种视图。因此，如果uptime给出的平均负荷值在任何时间范围内都大于1，则vmstat报告的可运行任务数量也应该接近1。




如果被换出到磁盘上的内存空间是错误的内存页，或者如果应用程序的当前内存印迹大于物理内存容量的话，那么这些过高的延迟会极大地影响应用的响应时间。许多性能问题都是由于内存不足而引起操作系统的交换。因此，有必要利用一些工具来监视内存的使用情况，例如，每个进程或线程的内核内存占用量，以及内核数据结构的内存使用机制及其数量和大小。